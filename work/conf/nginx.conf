# -*- mode: nginx -*-
# vim: set expandtab tabstop=4 shiftwidth=4:

worker_processes  1;
error_log logs/error.log;

events {
    worker_connections 1024;
}

http {
    server {
        listen 8080;

        # Hello World
        location /hello {
            set $foo "hello";
            echo $foo;

            set $foo "world";
            echo $foo;
        }

        # If is Evil
        location /if {
            set $foo 1;

            if ($foo = 1) {
                set $foo 2;
                echo "foo = $foo";
            }

            set $foo 3;
            proxy_pass http://127.0.0.1:$server_port/$foo;
        }

        location ~ /(\d+) {
            echo "bar = $1";
        }

        # Intro ngx_lua
        location /add {
            set $res '';

            rewrite_by_lua '
                local a = tonumber(ngx.var.arg_a) or 0
                local b = tonumber(ngx.var.arg_b) or 0
                ngx.var.res = a + b
            ';

            content_by_lua '
                ngx.say(ngx.var.res)
            ';
        }

        # Base64 Filter by Lua
        location /base64 {
            set $b64_en '';
            set $b64_e0 '';
            set $b64_e1 '';

            echo_duplicate 1000 hello;

            header_filter_by_lua '
                ngx.header.content_length = nil -- ((n + 2) / 3 ) * 4
                ngx.header.content_type = "text/plain"
                ngx.header.content_transfer_encoding = "base64"
            ';

            body_filter_by_lua '
                local chunk = ngx.arg[1]

                local e0 = ngx.var.b64_e0 or ""
                local e1 = ngx.var.b64_e1 or ""
                local en = tonumber(ngx.var.b64_en) or 0

                if en == 1 then
                    chunk = e0 .. chunk
                elseif en == 2 then
                    chunk = e0 .. e1 .. chunk
                end

                if not ngx.arg[2] then
                    en = #chunk % 3
                    if en == 1 then
                        e0 = chunk:sub(-1)
                    elseif en == 2 then
                        e1 = chunk:sub(-1)
                        e0 = chunk:sub(-2, -2)
                    end
                    chunk = chunk:sub(1, #chunk - en)
                else -- eof
                    en = 0
                end

                ngx.var.b64_en = en
                ngx.var.b64_e0 = e0
                ngx.var.b64_e1 = e1

                ngx.arg[1] = ngx.encode_base64(chunk)
            ';
        }
    }
}
